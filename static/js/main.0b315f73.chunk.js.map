{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","handleClick","activeID","className","map","todo","isActive","id","classNames","completed","title","type","onClick","TodoFilter","onChangeSelector","selectorValue","onChangeInput","inputValue","clear","value","onChange","event","target","placeholder","toLowerCase","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","getTodos","TodoModal","reset","useState","activeUser","setActiveUser","useEffect","userId","user","href","email","name","App","userTodos","setUserTodos","filterSelection","setFilterSelection","query","setQuery","setIsActive","selectTodo","setSelectTodo","activeTodoID","setActiveTodoID","filteredTodos","Active","filter","Completed","visibleTodos","useMemo","includes","closeWindow","useCallback","clearInput","length","ReactDOM","render","document","getElementById"],"mappings":"oPAUaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,YACAC,EAHuC,EAGvCA,SAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,oBAAI,aAAW,aAInB,gCACGH,EAAMI,KAAI,SAAAC,GACT,IAAMC,EAAWJ,IAAaG,EAAKE,GAEnC,OACE,qBACE,UAAQ,OACRJ,UAAWK,IACT,CAAE,4BAA6BF,IAHnC,UAOE,oBAAIH,UAAU,eAAd,SAA8BE,EAAKE,KACnC,oBAAIJ,UAAU,eAAd,SACGE,EAAKI,WACJ,sBAAMN,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWE,EAAKI,UACf,mBACA,kBAFJ,SAIGJ,EAAKK,UAGV,oBAAIP,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVQ,KAAK,SACLC,QAAS,kBAAMX,EAAYI,IAJ7B,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAS,cAASG,EAAW,eAAiB,oBA1BlDD,EAAKE,aC7BTM,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,iBACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,WACAC,EACI,EADJA,MAUA,OACE,uBAAMf,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRgB,MAAOJ,EACPK,SAfiB,SAACC,GAC1BP,EAAiBO,EAAMC,OAAOH,QAWxB,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGhB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRQ,KAAK,OACLR,UAAU,QACVoB,YAAY,YACZJ,MAAOF,EACPG,SA3BkB,SAACC,GACzBL,EAAcK,EAAMC,OAAOH,MAAMK,kBA4B7B,sBAAMrB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBsB,MAAO,CAAEC,cAAe,OAAxD,SACGT,GACC,wBACE,UAAQ,oBACR,aAAW,SACXN,KAAK,SACLR,UAAU,SACVS,QAASM,aC1DVS,G,MAAmB,kBAC9B,qBAAKxB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASyB,EAAOC,GACd,IAPYC,EAONC,EAAO,UATE,iEASeF,EAAjB,SAEb,OATYC,EASA,IARL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAQnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICAFC,EDAQC,EAAW,kBAAMZ,EAAY,WET7Ba,EAA6B,SAAC,GAAqB,IAAnBpC,EAAkB,EAAlBA,KAAMqC,EAAY,EAAZA,MACjD,EAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,OAJAC,qBAAU,WFkBW,IAACC,KEjBZ1C,EAAK0C,OFiB0BnB,EAAG,iBAAiBmB,KEjBtCZ,MAAK,SAAAa,GAAI,OAAIH,EAAcG,QAC/C,CAAC3C,EAAKE,KAGP,sBAAKJ,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,sBAEbyC,GAAe,cAAC,EAAD,IAEhBA,GACC,sBAAKzC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYE,EAAKE,MAGjB,wBACEI,KAAK,SACL,aAAW,SACXR,UAAU,SACV,UAAQ,cACRS,QAAS8B,OAIb,sBAAKvC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGE,EAAKK,QAGR,oBAAGP,UAAU,QAAQ,UAAQ,aAA7B,UACGE,EAAKI,UAEF,wBAAQN,UAAU,mBAAlB,kBAKA,wBAAQA,UAAU,kBAAlB,qBAKH,OAED,mBAAG8C,KAAI,iBAAYL,EAAWM,OAA9B,SACGN,EAAWO,qB,SD5CvBZ,K,gBAAAA,E,uBAAAA,M,KAKE,IAAMa,EAAgB,WAC3B,MAAkCT,mBAAiB,IAAnD,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAA8CX,mBAAS,OAAvD,mBAAOY,EAAP,KAAwBC,EAAxB,KACA,EAA0Bb,mBAAS,IAAnC,mBAAOc,EAAP,KAAcC,EAAd,KACA,EAAgCf,oBAAS,GAAzC,mBAAOrC,EAAP,KAAiBqD,EAAjB,KACA,EAAoChB,qBAApC,mBAAOiB,EAAP,KAAmBC,EAAnB,KACA,EAAwClB,mBAAS,GAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KAEMC,EAAgB,WACpB,OAAQT,GACN,KAAKhB,EAAO0B,OACV,ODRCzB,IACJL,MAAK,SAAAnC,GAAK,OAAIA,EAAMkE,QAAO,SAAA7D,GAAI,OAAKA,EAAKI,gBCSxC,KAAK8B,EAAO4B,UACV,ODhBC3B,IACJL,MAAK,SAAAnC,GAAK,OAAIA,EAAMkE,QAAO,SAAA7D,GAAI,OAAIA,EAAKI,gBCiBvC,QACE,OAAO+B,MAIbM,qBAAW,WACTkB,IAAgB7B,MAAK,SAAAnC,GAAK,OAAIsD,EAAatD,QACzC,CAACuD,IAEL,IAAMa,EAAeC,mBAAQ,WAC3B,OAAOhB,EAAUa,QAAO,SAAA7D,GAAI,OAAKA,EAAKK,MAAOc,cAAc8C,SAASb,QACnE,CAACJ,EAAWI,IAQTc,EAAcC,uBAAY,WAC9Bb,GAAY,GACZI,EAAgB,KACf,IAEGU,EAAaD,uBAAY,WAC7Bd,EAAS,MACR,IAEH,OACE,qCACE,qBAAKvD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEW,iBAAkB0C,EAClBzC,cAAewC,EACfvC,cAAe0C,EACfzC,WAAYwC,EACZvC,MAAOuD,MAIX,qBAAKtE,UAAU,QAAf,SACIkD,EAAUqB,OAGR,cAAC,EAAD,CACE1E,MAAOoE,EACPnE,YAtCE,SAACI,GACnBsD,GAAY,GACZE,EAAcxD,GACd0D,EAAgB1D,EAAKE,KAoCLL,SAAU4D,IALX,cAAC,EAAD,aAaZxD,GAAYsD,GACX,cAAC,EAAD,CACEvD,KAAMuD,EACNlB,MAAO6B,QErGjBI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0b315f73.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleClick: (value: Todo) => void;\n  activeID: number\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleClick,\n  activeID,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th aria-label=\"gap\" />\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const isActive = activeID === todo.id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': isActive },\n            )}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={`far ${isActive ? 'fa-eye-slash' : 'fa-eye'}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, { ChangeEvent } from 'react';\n\ntype Props = {\n  onChangeSelector: (select: string) => void;\n  selectorValue: string;\n  onChangeInput: (value: string) => void;\n  inputValue: string;\n  clear: () => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChangeSelector,\n  selectorValue,\n  onChangeInput,\n  inputValue,\n  clear,\n}) => {\n  const handleChangeSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    onChangeSelector(event.target.value);\n  };\n\n  const handleChangeInput = (event: ChangeEvent<HTMLInputElement>) => {\n    onChangeInput(event.target.value.toLowerCase());\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectorValue}\n            onChange={handleChangeSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {inputValue && (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"delete\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clear}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL + url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getCompletedTodos = () => {\n  return getTodos()\n    .then(todos => todos.filter(todo => todo.completed));\n};\n\nexport const getActiveTodos = () => {\n  return getTodos()\n    .then(todos => todos.filter(todo => !todo.completed));\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport {\n  getActiveTodos,\n  getCompletedTodos,\n  getTodos,\n} from './api';\nimport { Todo } from './types/Todo';\n\nenum Filter {\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [userTodos, setUserTodos] = useState<Todo[]>([]);\n  const [filterSelection, setFilterSelection] = useState('all');\n  const [query, setQuery] = useState('');\n  const [isActive, setIsActive] = useState(false);\n  const [selectTodo, setSelectTodo] = useState<Todo>();\n  const [activeTodoID, setActiveTodoID] = useState(0);\n\n  const filteredTodos = () => {\n    switch (filterSelection) {\n      case Filter.Active:\n        return getActiveTodos();\n\n      case Filter.Completed:\n        return getCompletedTodos();\n\n      default:\n        return getTodos();\n    }\n  };\n\n  useEffect((() => {\n    filteredTodos().then(todos => setUserTodos(todos));\n  }), [filterSelection]);\n\n  const visibleTodos = useMemo(() => {\n    return userTodos.filter(todo => (todo.title).toLowerCase().includes(query));\n  }, [userTodos, query]);\n\n  const handleClick = (todo: Todo) => {\n    setIsActive(true);\n    setSelectTodo(todo);\n    setActiveTodoID(todo.id);\n  };\n\n  const closeWindow = useCallback(() => {\n    setIsActive(false);\n    setActiveTodoID(0);\n  }, []);\n\n  const clearInput = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeSelector={setFilterSelection}\n                selectorValue={filterSelection}\n                onChangeInput={setQuery}\n                inputValue={query}\n                clear={clearInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!userTodos.length\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    handleClick={handleClick}\n                    activeID={activeTodoID}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isActive && selectTodo && (\n        <TodoModal\n          todo={selectTodo}\n          reset={closeWindow}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo\n  reset: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, reset }) => {\n  const [activeUser, setActiveUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId).then(user => setActiveUser(user));\n  }, [todo.id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!activeUser && (<Loader />)}\n\n      {activeUser && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              aria-label=\"delete\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={reset}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${activeUser.email}`}>\n                {activeUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}